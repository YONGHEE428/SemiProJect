/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-23 03:15:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html class=\"csstransforms no-csstransforms3d csstransitions\"><head>\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("	<meta charset=\"UTF-8\">\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\n");
      out.write("	");

	
   //프로젝트 경로구해기
   String root=request.getContextPath();

      out.write("\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(root);
      out.write("/menu/css/font-awesome.css\">\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(root);
      out.write("/menu/css/menu.css?v=20240522\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css\">\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.print(root );
      out.write("/menu/js/jquery.js\"></script>\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.print(root );
      out.write("/menu/js/function.js\"></script>\n");
      out.write("</head>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	function logout(){\n");
      out.write("	alert(\"로그아웃 하셨습니다.\");\n");
      out.write("	location.href = \"login/logoutform.jsp\";\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	$(function(){\n");
      out.write("		$(\".searchpage\").hide();\n");
      out.write("		const originalText = $(\"#logouting span\").text(); // 원래 텍스트 저장\n");
      out.write("\n");
      out.write("		  $(\"#logouting\").hover(function() {\n");
      out.write("		    $(this).find(\"span\").text(\"로그아웃\");\n");
      out.write("		  }, function() {\n");
      out.write("		    $(this).find(\"span\").text(originalText);\n");
      out.write("		  });\n");
      out.write("		\n");
      out.write("		  $(\"#search\").click(function() {\n");
      out.write("			  $(\".overlay\").fadeIn();\n");
      out.write("			  $(\".searchpage\").fadeIn();\n");
      out.write("			  $(\"body\").css(\"overflow\", \"hidden\");\n");
      out.write("			});\n");
      out.write("\n");
      out.write("			// 배경 클릭 시 닫기\n");
      out.write("			$(\".overlay\").click(function() {\n");
      out.write("			  $(\".overlay\").fadeOut();\n");
      out.write("			  $(\".searchpage\").fadeOut();\n");
      out.write("			  $(\"body\").css(\"overflow\", \"auto\"); // 스크롤 복원\n");
      out.write("			});\n");
      out.write("\n");
      out.write("			// 닫기 버튼 클릭 시 닫기\n");
      out.write("			$(\".close-btn\").click(function() {\n");
      out.write("			  $(\".overlay\").fadeOut();\n");
      out.write("			  $(\".searchpage\").fadeOut();\n");
      out.write("			  $(\"body\").css(\"overflow\", \"auto\"); // 스크롤 복원\n");
      out.write("			});\n");
      out.write("\n");
      out.write("			// ESC 키 누르면 닫기\n");
      out.write("			$(document).on(\"keydown\", function(e) {\n");
      out.write("			  if (e.key === \"Escape\") {\n");
      out.write("			    $(\".overlay\").fadeOut();\n");
      out.write("			    $(\".searchpage\").fadeOut();\n");
      out.write("			    $(\"body\").css(\"overflow\", \"auto\"); // 스크롤 복원\n");
      out.write("			  }\n");
      out.write("			});\n");
      out.write("\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("<body>\n");
      out.write("<div id=\"wrap\">\n");
      out.write("	<header>\n");
      out.write("		<div class=\"inner relative\">\n");
      out.write("			<div class=\"logoimg\">\n");
      out.write("			<a href=\"");
      out.print(root);
      out.write("/\"><img src=\"");
      out.print(root);
      out.write("/SemiImg/mainLogo.png\" class=\"logo\"></a>\n");
      out.write("			<div class=\"search\">\n");
      out.write("			<input type=\"text\" id=\"search\" class=\"form-control textbox\" name=\"\" value=\"\" placeholder=\"상품 검색\" readonly style=\"cursor: pointer;\">\n");
      out.write("			<i class=\"bi bi-search\" onclick=\"submit\"></i>\n");
      out.write("			\n");
      out.write("			</div>\n");
      out.write("			</div>\n");
      out.write("			<nav id=\"navigation\">\n");
      out.write("				<ul id=\"main-menu\">\n");
      out.write("					<li class=\"current-menu-item\"><a href=\"");
      out.print(root);
      out.write("/\">Home</a></li>\n");
      out.write("					<li><a href=\"#\">고객센터</a></li>\n");
      out.write("					<li><a href=\"");
      out.print(root);
      out.write("/shop/shoplist.jsp\">Shop</a></li>\n");
      out.write("					");

					String loginok = (String)session.getAttribute("loginok");
					String name = (String)session.getAttribute("name");
					String role = (String)session.getAttribute("role");
					if(loginok == null){ 
      out.write("\n");
      out.write("						<li><a href=\"index.jsp?main=member/memberform.jsp\">회원가입</a></li>\n");
      out.write("					");
}else{ 
      out.write("\n");
      out.write("						");
if(role !=null && role.equals("user")){
      out.write("\n");
      out.write("							<li><a href=\"index.jsp?main=member/mypage.jsp\">마이페이지</a></li>\n");
      out.write("							<li><a href=\"#\">장바구니</a></li>\n");
      out.write("							\n");
      out.write("					");
}if(role !=null && role.equals("admin")){
      out.write("\n");
      out.write("							<li><a href=\"#\">매장관리</a>\n");
      out.write("					");
} 
					}
      out.write("\n");
      out.write("					<li>\n");
      out.write("					  ");

					    if(loginok != null && loginok.equals("yes")) {
					  
      out.write("\n");
      out.write("					  <a href=\"#\" id=\"logouting\" onclick=\"logout()\"><span>");
      out.print(name);
      out.write("님</span></a>\n");
      out.write("						<!-- <ul class=\"sub-menu\">\n");
      out.write("						\n");
      out.write("							<li><a href=\"#\" onclick=\"logout()\">로그아웃</a></li>\n");
      out.write("						</ul> -->\n");
      out.write("					  ");

					    } else {
					  
      out.write("\n");
      out.write("					    <a href=\"index.jsp?main=login/loginform.jsp\">로그인</a>\n");
      out.write("					  ");

					    }
					  
					  
      out.write("\n");
      out.write("					</li>\n");
      out.write("				</ul>\n");
      out.write("			</nav>\n");
      out.write("			<div class=\"clear\"></div>\n");
      out.write("		</div>\n");
      out.write("	</header>	\n");
      out.write("</div>\n");
      out.write("<!-- 배경 어둡게 -->\n");
      out.write("<div class=\"overlay\"></div>\n");
      out.write("\n");
      out.write("<!-- 검색창 팝업 -->\n");
      out.write("<div class=\"searchpage\">\n");
      out.write("  <button class=\"close-btn\">❌</button>\n");
      out.write("  <h4>검색어를 입력하세요</h4>\n");
      out.write("  <input type=\"text\" class=\"form-control\" placeholder=\"예: 가방, 신발 등\">\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body></html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
